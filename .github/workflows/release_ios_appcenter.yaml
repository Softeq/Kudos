name: Release iOS

on:
  push:
    branches:
      - 'releases/**'
      - 'releases-ios/**'
    tags:
      - release_**

env:
  flutter_version: "1.22.1"
  java_version: "12.x"
  appcenter_cli_version: "2.6.3"

jobs:
  build:
    defaults:
      run:
        working-directory: src
    runs-on: macos-latest
    env:
      KEYCHAIN: build.keychain
      XC_ARCHIVE_PATH: build/ios/ci/Runner.xcarchive
      XC_EXPORT_PATH: build/ios/ci/RunnerExport
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: ${{ env.java_version }}

    - name: Cache flutter
      uses: actions/cache@v1
      with:
        path: /Users/runner/hostedtoolcache/flutter
        key: ${{ runner.os }}-flutter-${{ env.flutter_version }}

    - name: Use flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: ${{ env.flutter_version }}

    - name: Cache Pods dependencies
      uses: actions/cache@v1
      with:
        path: ios/Pods
        key: ${{ runner.OS }}-pods-${{ hashFiles('**/ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.OS }}-pods-

    - name: Install app dependencies
      run: flutter pub get

    - name: Add GoogleService-Info.plist
      run: |
        echo "$FIREBASE_CONFIG" > ios/Runner/GoogleService-Info.plist
      env:
        FIREBASE_CONFIG: ${{ secrets.ios_google_services }}

    - name: Build app
      run: flutter build ios --release --no-codesign

    - name: Decrypt
      run: |
        cd ../certificates/ios/
        zsh decrypt.sh
      env:
        IOS_PASSPHRASE: ${{ secrets.ios_passphrase }}

    - name: Configure Keychain & Code Signing
      run: |
        cd ../certificates/ios/

        echo "Install profiles..."
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        UUID=`/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i ./prod.mobileprovision)`
        cp prod.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision
        ls ~/Library/MobileDevice/Provisioning\ Profiles
        echo "Done."

        echo "Configure keychain & import"
        security create-keychain -p "" "$KEYCHAIN"
        security set-keychain-settings "$KEYCHAIN"
        security unlock-keychain -p "" "$KEYCHAIN"
        security import prod.p12 -k "$KEYCHAIN" -P "$IOS_PASSPHRASE" -T /usr/bin/codesign -T /usr/bin/security

        curl https://www.apple.com/certificateauthority/AppleWWDRCAG3.cer --output AppleWWDRCA.cer
        security import AppleWWDRCA.cer -k "$KEYCHAIN" -P "" -t cert -A
        rm AppleWWDRCA.cer

        security set-key-partition-list -S apple-tool:,apple: -k "" "$KEYCHAIN"
        security default-keychain -d user -s "$KEYCHAIN"
        security list-keychains -d user -s login.keychain "$KEYCHAIN"
        security find-identity
        security find-identity -v -p codesigning
        echo "Done."
      env:
        IOS_PASSPHRASE: ${{ secrets.ios_passphrase }}

    - name: Archive
      run: |
        xcodebuild \
          -workspace ios/Runner.xcworkspace \
          -scheme Runner \
          -sdk iphoneos \
          -configuration Release \
          OTHER_CODE_SIGN_FLAGS="--keychain=$KEYCHAIN" \
          archive \
          -archivePath "$XC_ARCHIVE_PATH"

    - name: Export for distribution
      run: |
        xcodebuild \
          -exportArchive \
          -archivePath "$XC_ARCHIVE_PATH" \
          -exportOptionsPlist ios/ExportOptions.plist \
          -exportPath "$XC_EXPORT_PATH"

    - name: Cache NPM dependencies (App Center)
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-npm-

    - name: Deploy to App Center
      run: |
        npm install appcenter-cli@${{ env.appcenter_cli_version}}
        npx appcenter distribute release \
          --token "${{ secrets.app_center }}" \
          --app "softeqdevelopment/Kudos.iOS" \
          --group "Dev Team" \
          --file "$XC_EXPORT_PATH/Runner.ipa" \
          --release-notes "New release" \
          --debug
